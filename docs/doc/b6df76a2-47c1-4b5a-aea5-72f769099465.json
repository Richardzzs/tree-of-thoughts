{
    "summary": "This code offers social media sharing tools for promoting the \"tree-of-thoughts\" project, which combines the Tree of Thoughts algorithm, OpenAI Language Model API, and user model connections to improve AI reasoning. It initializes a Monte Carlo Tree of Thoughts model, sets up an initial prompt, solves problems using the algorithm with specific parameters, and prints collaborative solutions.",
    "details": [
        {
            "comment": "This code is a README file that includes various sharing buttons for social media platforms like Discord, Twitter, LinkedIn, Facebook, and Reddit. These buttons allow users to easily share the project link with their networks.",
            "location": "\"/media/root/Prima/works/tree-of-thoughts/docs/src/README.md\":0-8",
            "content": "[![Multi-Modality](agorabanner.png)](https://discord.gg/qUtxnK2NMf)\n![Tree of Thoughts Banner](treeofthoughts.png)\n![Discord](https://img.shields.io/discord/999382051935506503)\n[![Twitter](https://img.shields.io/twitter/url?style=social&url=https%3A%2F%2Fgithub.com%2Fkyegomez%2Ftree-of-thoughts)](https://twitter.com/intent/tweet?text=Check%20out%20this%20amazing%20project%20on%20improving%20AI%20reasoning%20-%20Tree%20of%20Thoughts!%20https://github.com/kyegomez/tree-of-thoughts)\n[![LinkedIn](https://img.shields.io/badge/Share-LinkedIn-blue?style=social&logo=linkedin)](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fgithub.com%2Fkyegomez%2Ftree-of-thoughts)\n[![Facebook](https://img.shields.io/badge/Share-Facebook-blue?style=social&logo=facebook)](https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fgithub.com%2Fkyegomez%2Ftree-of-thoughts)\n[![Reddit](https://img.shields.io/badge/Share-Reddit-orange?style=social&logo=reddit)](https://www.reddit.com/submit?url=https%3A%"
        },
        {
            "comment": "Code snippet provides sharing options for the \"tree-of-thoughts\" project on various social media platforms like Hacker News, Pinterest, and WhatsApp using badges. The links are prefilled with a message to promote the project's purpose: improving AI reasoning through the Tree of Thoughts.",
            "location": "\"/media/root/Prima/works/tree-of-thoughts/docs/src/README.md\":8-11",
            "content": "2F%2Fgithub.com%2Fkyegomez%2Ftree-of-thoughts&title=Check%20out%20this%20amazing%20project%20on%20improving%20AI%20reasoning%20-%20Tree%20of%20Thoughts%21)\n[![Hacker News](https://img.shields.io/badge/Share-Hacker%20News-orange?style=social&logo=y-combinator)](https://news.ycombinator.com/submitlink?u=https%3A%2F%2Fgithub.com%2Fkyegomez%2Ftree-of-thoughts&t=Check%20out%20this%20amazing%20project%20on%20improving%20AI%20reasoning%20-%20Tree%20of%20Thoughts%21)\n[![Pinterest](https://img.shields.io/badge/Share-Pinterest-red?style=social&logo=pinterest)](https://pinterest.com/pin/create/button/?url=https%3A%2F%2Fgithub.com%2Fkyegomez%2Ftree-of-thoughts&media=https%3A%2F%2Fgithub.com%2Fkyegomez%2Ftree-of-thoughts%2Fraw%2Fmain%2Ftree-of-thoughts.jpeg&description=Check%20out%20this%20amazing%20project%20on%20improving%20AI%20reasoning%20-%20Tree%20of%20Thoughts%21)\n[![WhatsApp](https://img.shields.io/badge/Share-WhatsApp-green?style=social&logo=whatsapp)](https://api.whatsapp.com/send?text=Check"
        },
        {
            "comment": "This code installs the Tree of Thoughts algorithm, which significantly improves model reasoning by up to 70%. Users can connect their own models and experience superintelligence. The code imports necessary classes, initializes an OpenAILanguageModel with an API key, and initializes a MonteCarloTreeofThoughts class with the model for improved reasoning.",
            "location": "\"/media/root/Prima/works/tree-of-thoughts/docs/src/README.md\":11-45",
            "content": "%20out%20this%20amazing%20project%20on%20improving%20AI%20reasoning%20-%20Tree%20of%20Thoughts%21%20https%3A%2F%2Fgithub.com%2Fkyegomez%2Ftree-of-thoughts)\n[Paper link](https://arxiv.org/pdf/2305.10601.pdf)\n[Author's implementation](https://github.com/princeton-nlp/tree-of-thought-llm)\n## Introduction\nTree of Thoughts (ToT) is a powerful and flexible algorithm that significantly advances model reasoning by up to 70%. This plug-and-play version allows you to connect your own models and experience superintelligence!\n## Install\n```bash\npip install tree-of-thoughts\n```\n## Usage\n```python\nimport os\nfrom tree_of_thoughts.openai_models import OpenAILanguageModel\nfrom tree_of_thoughts.treeofthoughts import MonteCarloTreeofThoughts\nfrom dotenv import load_dotenv\nload_dotenv()\napi_key = os.environ.get(\"OPENAI_API_KEY\")\n# Initialize the OpenAILanguageModel class with the API key\nmodel = OpenAILanguageModel(api_key=api_key)\n# Initialize the MonteCarloTreeofThoughts class with the model\ntree_of_thoughts = MonteCarloTreeofThoughts(model)"
        },
        {
            "comment": "The code is initializing the initial prompt, defining parameters for generating thoughts (e.g., number of thoughts, maximum steps and states), and setting a pruning threshold for tree search. It then calls the solve function from tree_of_thoughts module to generate thoughts using the Hugging Face Transformers language model with the given parameters. The solution is printed at the end.",
            "location": "\"/media/root/Prima/works/tree-of-thoughts/docs/src/README.md\":47-95",
            "content": "# Define the initial prompt\ninitial_prompt = \"\"\"\nInput: 2 8 8 14\nPossible next steps:\n2 + 8 = 10 (left: 8 10 14)\n8 / 2 = 4 (left: 4 8 14)\n14 + 2 = 16 (left: 8 8 16)\n2 * 8 = 16 (left: 8 14 16)\n8 - 2 = 6 (left: 6 8 14)\n14 - 8 = 6 (left: 2 6 8)\n14 /  2 = 7 (left: 7 8 8)\n14 - 2 = 12 (left: 8 8 12)\nInput: use 4 numbers and basic arithmetic operations (+-*/) to obtain 24 in 1 equation\nPossible next steps:\n\"\"\"\n# Define the number of thoughts to generate\nnum_thoughts = 1\nmax_steps = 3\nmax_states = 4\npruning_threshold = 0.5\n# Generate the thoughts\nsolution = tree_of_thoughts.solve(\n    initial_prompt=initial_prompt,\n    num_thoughts=num_thoughts,\n    max_steps=max_steps,\n    max_states=max_states,\n    pruning_threshold=pruning_threshold,\n    # sleep_time=sleep_time\n)\nprint(f\"Solution: {solution}\")\n```\n### ToT with HF LLM\nTo run Hugging Face Transformers with Tree of Thoughts:\n```python\nfrom tree_of_thoughts import TreeofThoughts, HuggingLanguageModel, MonteCarloTreeofThoughts\nmodel_name=\"01-ai/Yi-34B\"\nmodel = HuggingLanguageModel(model_name, "
        },
        {
            "comment": "The code initializes a MonteCarloTreeofThoughts model, sets up an initial prompt, and then solves the problem using the Tree of Thoughts algorithm with specified parameters.",
            "location": "\"/media/root/Prima/works/tree-of-thoughts/docs/src/README.md\":96-139",
            "content": "                             model_tokenizer=model_name, \n                             verbose=True)\n# Initialize the MonteCarloTreeofThoughts class with the model\ntree_of_thoughts = MonteCarloTreeofThoughts(model)\n# Note to reproduce the same results from the tree of thoughts paper if not better, \n# craft an 1 shot chain of thought prompt for your task below\ninitial_prompt =  \"\"\"\nInput: 2 8 8 14\nPossible next steps:\n2 + 8 = 10 (left: 8 10 14)\n8 / 2 = 4 (left: 4 8 14)\n14 + 2 = 16 (left: 8 8 16)\n2 * 8 = 16 (left: 8 14 16)\n8 - 2 = 6 (left: 6 8 14)\n14 - 8 = 6 (left: 2 6 8)\n14 /  2 = 7 (left: 7 8 8)\n14 - 2 = 12 (left: 8 8 12)\nInput: use 4 numbers and basic arithmetic operations (+-*/) to obtain 24 in 1 equation\nPossible next steps:\n\"\"\"\nnum_thoughts = 1\nmax_steps = 3\nmax_states = 4\npruning_threshold = 0.5\nsolution = tree_of_thoughts.solve(\n    initial_prompt=initial_prompt,\n    num_thoughts=num_thoughts, \n    max_steps=max_steps, \n    max_states=max_states, \n    pruning_threshold=pruning_threshold,\n    # sleep_time=sleep_time"
        },
        {
            "comment": "Code snippet for printing the solution obtained after solving a problem collaboratively using the tree of thoughts method.",
            "location": "\"/media/root/Prima/works/tree-of-thoughts/docs/src/README.md\":140-161",
            "content": ")\nprint(f\"Solution: {solution}\")\n```\n### Basic Prompts\n- Copy and paste this into your llm!\n```\n\"Three experts with exceptional logical thinking skills are collaboratively answering a question using the tree of thoughts method. Each expert will share their thought process in detail, taking into account the previous thoughts of others and admitting any errors. They will iteratively refine and expand upon each other's ideas, giving credit where it's due. The process continues until a conclusive answer is found. Organize the entire response in a markdown table format. The task is:\n```\n# Acknowledgements\nThanks to: Shunyu Yao Princeton University, Dian Yu Google DeepMind, Jeffrey Zhao, Google DeepMind, Izhak Shafran Google DeepMind, Thomas L. Griffiths, Princeton University, Yuan Cao Google DeepMind, Karthik Narasimha, Princeton University for sharing this amazing work with the world!\nAnd, thanks to Phil Wang or Lucidrains for inspiring me to devote myself to open source AI Research\n# License\nApache"
        }
    ]
}